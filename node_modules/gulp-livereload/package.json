{
  "name": "gulp-livereload",
  "description": "Gulp plugin for livereload.",
  "version": "3.6.0",
  "main": "./index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/vohof/gulp-livereload.git"
  },
  "license": "MIT",
  "keywords": [
    "gulpplugin",
    "livereload"
  ],
  "dependencies": {
    "chalk": "^0.5.1",
    "debug": "^2.1.0",
    "event-stream": "^3.1.7",
    "gulp-util": "^3.0.2",
    "lodash.assign": "^2.4.1",
    "tiny-lr": "^0.1.4"
  },
  "devDependencies": {
    "mocha": "^2.0.1",
    "sinon": "^1.12.2"
  },
  "readme": "gulp-livereload\n===\n\n[![Build Status][1]][2] [![Code Climate][7]][6] [![Livereload downloads][3]][4] [![Tag][9]][8] [![MIT Licensed][5]](#license)\n\n[1]: http://img.shields.io/travis/vohof/gulp-livereload/master.svg?style=flat\n[2]: https://travis-ci.org/vohof/gulp-livereload\n\n[3]: http://img.shields.io/npm/dm/gulp-livereload.svg?style=flat\n[4]: https://www.npmjs.com/package/gulp-livereload\n\n[5]: http://img.shields.io/badge/license-MIT-blue.svg?style=flat\n\n[6]: https://codeclimate.com/github/vohof/gulp-livereload\n[7]: https://img.shields.io/codeclimate/coverage/github/vohof/gulp-livereload.svg?style=flat\n\n[8]: https://github.com/vohof/gulp-livereload/releases\n[9]: https://img.shields.io/github/tag/vohof/gulp-livereload.svg?style=flat\n\n\nA lightweight [gulp](https://github.com/gulpjs/gulp) plugin for livereload best used with the [livereload chrome extension](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei).\n\nInstall\n---\n\n```\nnpm install --save-dev gulp-livereload\n```\n\n3.x Upgrade Notice\n---\n\n`gulp-livereload` will not automatically listen for changes. You now have to manually call `livereload.listen` or enable auto start.\nMore details below...\n\nAPI & Variables\n---\n\nlivereload uses a config object throughout its methods and while you never have to\nuse this, it is useful if you want to set configuration directly only once.\n\n    livereload.options.port                     Server port\n    livereload.options.host                     Server host\n    livereload.options.basePath                 Path to prepend all given paths\n    livereload.options.start                    Automatically start\n    livereload.options.quiet        false       Disable console logging\n    livereload.options.reloadPage   index.html  Path to the page the browsers on for a full page reload\n\nlivereload also reveals the underlying server instance for direct access if needed. The instance\nis a \"tiny-lr\" instance that this wraps around. If the server is not running then this will be undefined.\n\n    livereload.server\n\nYou can also directly access the middleware of the underlying server instance (tiny-lr.middleware) for\nhookup through express, connect, or some other middleware app\n\n    livereload.middleware\n\nTo start livereload up and running, use this command. It takes an optional options parameter that is the\nsame as the global one noted above. If none is present is uses the above one. Also you dont need to worry with multiple instances as\nthis function will end immidiately if the server is already runing. \n\n    livereload.listen(options)\n\nYou can manually, yourself, send a change notification of a single file to the browser causing the browser to reload that change.\nAll it requires is a single file path. Do also note that the basePath is not forgotten about and will be applied to the path if \nprovided or previosuly setup.\n\nYou may provide a simple string or an object, if an object is given it expects a property called \"path\" to be present on it\n\n    livereload.change(path)\n\nYou can also tell the browser to refresh the entire page, including all the assets on the page as opposed to individual assets.\nThis works best for single-page apps but can work on any setup. Essentially you need to refresh the page the browser is currently on.\nWith single-apge apps its just one page, if not then it must be the current page in the browser.\n\nHowever it's setup, this assumes the page is called \"index.html\", you can change it by providing an optional new path to use as a\nstring or change it globally with the options object exposed and mentioned above.\n\nThe base path is not forgotten about and will also be applied if setup\n\n    livereload.reload(path)\n\nFinally theres the Gulp pipe stream function, the most important function, which automatically sends the destination file through\n`livereload.change`\n\n    livereload(options)\n\nExample\n---\n\n```javascript\nvar gulp = require('gulp'),\n    less = require('gulp-less'),\n    livereload = require('gulp-livereload');\n\ngulp.task('less', function() {\n  gulp.src('less/*.less')\n    .pipe(less())\n    .pipe(gulp.dest('css'))\n    .pipe(livereload());\n});\n\ngulp.task('watch', function() {\n  livereload.listen();\n  gulp.watch('less/*.less', ['less']);\n});\n```\n\nSee [examples](examples).\n\nDebugging\n---\n\nSet the `DEBUG` environment variables to `*` to see what's going on\n\n\n```\n$ DEBUG=* gulp <task>\n```\n\n\nLicense\n---\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 Cyrus David\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/vohof/gulp-livereload/issues"
  },
  "homepage": "https://github.com/vohof/gulp-livereload",
  "_id": "gulp-livereload@3.6.0",
  "_from": "gulp-livereload@3.6.0"
}
